# なでしこで作ったチャット for nadesiko3php
# === 設定 ===
APPタイトル=「なでしこチャット大会2022年」
合い言葉質問＝『ここに「なでしこ」の四文字をカタカナで入力してください。』
合い言葉答え＝「ナデシコ」
DB保存先＝「./chatlogs.sqlite3」
# === セッションで管理する変数 ===
セッション開始。
F名前＝「」
FID＝「」

# === メイン処理 ===
DB作成処理。
メイン処理。

●メイン処理とは
　　実行モード=「mode」を「list」でGET取得。
　　実行モードで条件分岐
　　　「in」ならば、入室画面表示💧
　　　「out」ならば、退室画面表示💧
　　　「in_go」ならば、入室処理💧
　　　「list」ならば、一覧表示💧
　　　「all-list」ならば、全部表示💧
　　　「api-write」ならば、API書込処理💧
　　　「api-list」ならば、API一覧取得💧
　　　違えば、一覧表示。💧
　　ここまで。
ここまで。

●API一覧取得とは
　　DBログ取得処理。
　　それをログHTML取得して表示。
ここまで。

●（データを）ログHTML取得とは
　　HTML=""
　　データを反復
　　　　# --- 改行を処理 ---
　　　　対象["body"]のCHR(10)を「¶」に置換。
　　　　それをHTML変換。
　　　　それの「¶」を「<br>」に置換。
　　　　対象["body"] = それ。
　　　　「<div class="line">
<div class="name">[[name]]</div>
<div class="body">[[body | raw]]</div>
<div class='date'>([[mtime|date]] [[mtime|time]])</div>
</div>」に対象をHTML埋め込んでSに代入。
　　　　HTML=HTML&S
　　ここまで。
　　HTMLを戻す。
ここまで。

●全部表示とは
　　ログ全部＝「」
　　DB全部ログ取得処理。
　　それをログHTML取得して、ログ全部に代入。
　　「
<h2 class="title is-4">ログ全部表示</h2>
<div><a href="index.php">→チャット画面に戻る</a></div>
{ログ全部}
<div><a href="index.php">→チャット画面に戻る</a></div>
        」をHTML出力。
ここまで。

●一覧表示とは
　　もし、入室チェック＝いいえならば、戻る。
　　F名前＝「名前」を「名無し」でセッション取得。
　　FID＝「FID」を「」でセッション取得。
　　HTML=「
            <div class="box">
                コメント: <textarea class="input" id="comment-box" placeholder="コメントはこちらに"></textarea><br>
                <button id="write_button" class="button is-primary">発言</button>
            </div>
            <div class="box">
                <div id="logs_time" class="logs_time"></div>
                <div id="logs"></div>
                <div><a href="index.php?mode=all-list">😀→ログ全部表示</a></div>
            </div>
      」
　　HTMLをHTML出力。
ここまで。

●入室チェックとは
　　F名前＝「F名前」を「」でセッション取得。
　　もし、F名前が空ならば
　　　　入室画面表示。
　　　　いいえで戻る。
　　ここまで。
　　はいで戻る。
ここまで。

●退室画面表示とは
　　「F名前」を「」へセッション設定。
　　「FID」を「」へセッション設定。
　　「
            <h2 class="title is-3">退室しました</h2>
            <div class="box">お疲れさまでした。ありがとうございました。</div>
        」をHTML出力。
ここまで。

●入室画面表示とは
　　「
            <h2 class="title is-4">ようこそ！『{APPタイトル}』へ</h2>
            <div class="box">
                <form action="index.php?mode=in_go" method="post">
                お名前は？<br>
                <input class="input" type="text" name="F名前" size="16" placeholder="お名前"><br>
                合い言葉を入力してください。<br>
                <input class="input" type="text" name="合い言葉" size="16" placeholder="{合い言葉質問}"><br>
                <input class="button is-primary" type="submit" value="入室">
                </form>
            </div>
        」をHTML出力。
ここまで。

●入室処理とは
　　F合い言葉＝「合い言葉」を「」でPOST取得。
　　もし、F合い言葉≠合い言葉答えならば
　　　　「<h1 class="title is-3">合い言葉の間違い</h1>
<p>合い言葉が違います。合い言葉には、『{合い言葉答え}』と入力してください。</p>
<p><a href="index.php?mode=in">→戻る</a></p>
            」をHTML出力。
　　　　戻る。
　　ここまで。
　　F名前＝「F名前」を「名無し」でPOST取得。
　　FID＝（システム時間ミリ秒）＆「#」&(9999の乱数)。
　　「F名前」をF名前でセッション設定。
　　「FID」をFIDでセッション設定。
　　「location: ./」にヘッダ設定。
　　「<a href="./">{F名前}：here</a>」をHTML出力。
ここまで。

●API書込処理とは
　　F名前＝「F名前」を「名無し」でセッション取得。
　　FID＝「FID」を「」でセッション取得。
　　コメント＝「comment」を空でPOST取得。
　　「Content-Type: application/json」にヘッダ設定。
　　もし、（コメント＝空）ならば
　　　　『{"result": "error", "reason": "commentがありません"}』を表示。
　　　　戻る。
　　ここまで。
　　F今＝システム時間。
　　SQL=「INSERT INTO logs (name, body, ctime, mtime, delkey) VALUES (?,?,?,?,?)」
　　SQLを[F名前,コメント,F今,F今,FID]でPDO実行。
　　｛"result":"ok"}をJSONエンコードして表示。
ここまで。

●(BODYを)HTML出力とは
　　それは「
{HTMLヘッダ取得}
  <div class="box">
  {BODY}
  </div>
{HTMLフッタ取得}」
　　それを表示。
ここまで。

●(Sを)警告指定とは
　　それは「
<h2 class="title is-2 has-background-danger-light">{S}</h2>
<div><a href="./" class="button">→一覧表示</a></div>
」
ここまで。

●HTMLフォーム取得とは
　　それは「
<div class="box" style="border:1px solid silver; margin:0.5em;">
  <form method="POST">
    名前:<input class="input" type="text" name="名前" placeholder="お名前"><br>
    本文:<input class="input" type="text" name="本文" placeholder="本文">
    合い言葉: <input class="input" type="text" name="合い言葉"
      placeholder="{合い言葉質問}">
    <input type="hidden" name="実行モード" value="書き込み">
    <input type="submit" value="書き込み" class="button is-primary">
  </form>
</div>
」
ここまで。

●HTMLヘッダ取得とは
　　F名前=「F名前」を「名無しさん」でセッション取得。
　　FID=「FID」を「」でセッション取得。
　　クライアントコード＝「」
　　もし、FIDが空でなければ
　　　　クライアントコード＝「./client.txt」を開く。
　　ここまで。
　　それは『<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>[[タイトル]]</title>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
   <link rel="stylesheet" href="./chat.css?r=100">
   <script type="text/javascript"
 src="https://nadesi.com/v3/cdn.php?v=3.2.40&f=release/wnako3.js&run"
></script>
    <script type="なでしこ">
[[クライアントコード|raw]]
    </script>
</head>
<body>
<div class="box">
    [<a href="index.php?mode=in">入室</a>] - [<a href="index.php?mode=out">退室</a>] - [<a href="index.php?mode=list">一覧</a>] - [[F名前]]さん、こんにちは。
</div>
<h1 class="title is-3 has-background-danger-light">
    [[タイトル]]
</h1>
』に{
        "タイトル": APPタイトル,
        "F名前": F名前,
        "クライアントコード": クライアントコード,
    }をHTML埋め込み
ここまで。

●HTMLフッタ取得とは
　　それは「
<div class="box">
<div><a class="button" href="https://github.com/kujirahand/phpnako-exampe-bbs/">これは、なでしこ3PHPで作ったチャットです！</a></div>
</body></html>」
ここまで。

●DB作成処理とは
　　「sqlite:{DB保存先}」のPDO生成。
　　SQL=「
CREATE TABLE IF NOT EXISTS logs (
  id      INTEGER PRIMARY KEY,
  name    TEXT DEFAULT '',
  body    TEXT DEFAULT '',
  ctime   INTEGER DEFAULT 0,
  mtime   INTEGER DEFAULT 0,
  delkey  TEXT DEFAULT ''
)」
　　SQLを[]でPDO実行。
ここまで。

●DBログ取得処理とは
　　SQL=「SELECT * FROM logs ORDER BY id DESC LIMIT 30」
　　SQLを[]でPDO全取得。
ここまで。

●DB全部ログ取得処理とは
　　SQL=「SELECT * FROM logs ORDER BY id」
　　SQLを[]でPDO全取得。
ここまで。
